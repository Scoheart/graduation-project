/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexLayoutImport } from './routes/_indexLayout'
import { Route as IndexLayoutIndexImport } from './routes/_indexLayout/index'
import { Route as IndexLayoutSignImport } from './routes/_indexLayout/sign'
import { Route as IndexLayoutManageLayoutImport } from './routes/_indexLayout/_manageLayout'
import { Route as IndexLayoutManageLayoutManageImport } from './routes/_indexLayout/_manageLayout/manage'
import { Route as QuestionQuestionIdStatStatImport } from './routes/question_/$questionId/(Stat)/Stat'
import { Route as QuestionQuestionIdEditEditImport } from './routes/question_/$questionId/(Edit)/Edit'
import { Route as IndexLayoutManageLayoutManageTrashImport } from './routes/_indexLayout/_manageLayout/manage/trash'
import { Route as IndexLayoutManageLayoutManageStarImport } from './routes/_indexLayout/_manageLayout/manage/star'
import { Route as IndexLayoutManageLayoutManageListImport } from './routes/_indexLayout/_manageLayout/manage/list'

// Create/Update Routes

const IndexLayoutRoute = IndexLayoutImport.update({
  id: '/_indexLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLayoutIndexRoute = IndexLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => IndexLayoutRoute,
} as any)

const IndexLayoutSignRoute = IndexLayoutSignImport.update({
  path: '/sign',
  getParentRoute: () => IndexLayoutRoute,
} as any)

const IndexLayoutManageLayoutRoute = IndexLayoutManageLayoutImport.update({
  id: '/_manageLayout',
  getParentRoute: () => IndexLayoutRoute,
} as any)

const IndexLayoutManageLayoutManageRoute =
  IndexLayoutManageLayoutManageImport.update({
    path: '/manage',
    getParentRoute: () => IndexLayoutManageLayoutRoute,
  } as any)

const QuestionQuestionIdStatStatRoute = QuestionQuestionIdStatStatImport.update(
  {
    path: '/question/$questionId/Stat',
    getParentRoute: () => rootRoute,
  } as any,
)

const QuestionQuestionIdEditEditRoute = QuestionQuestionIdEditEditImport.update(
  {
    path: '/question/$questionId/Edit',
    getParentRoute: () => rootRoute,
  } as any,
)

const IndexLayoutManageLayoutManageTrashRoute =
  IndexLayoutManageLayoutManageTrashImport.update({
    path: '/trash',
    getParentRoute: () => IndexLayoutManageLayoutManageRoute,
  } as any)

const IndexLayoutManageLayoutManageStarRoute =
  IndexLayoutManageLayoutManageStarImport.update({
    path: '/star',
    getParentRoute: () => IndexLayoutManageLayoutManageRoute,
  } as any)

const IndexLayoutManageLayoutManageListRoute =
  IndexLayoutManageLayoutManageListImport.update({
    path: '/list',
    getParentRoute: () => IndexLayoutManageLayoutManageRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_indexLayout': {
      preLoaderRoute: typeof IndexLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_indexLayout/_manageLayout': {
      preLoaderRoute: typeof IndexLayoutManageLayoutImport
      parentRoute: typeof IndexLayoutImport
    }
    '/_indexLayout/sign': {
      preLoaderRoute: typeof IndexLayoutSignImport
      parentRoute: typeof IndexLayoutImport
    }
    '/_indexLayout/': {
      preLoaderRoute: typeof IndexLayoutIndexImport
      parentRoute: typeof IndexLayoutImport
    }
    '/_indexLayout/_manageLayout/manage': {
      preLoaderRoute: typeof IndexLayoutManageLayoutManageImport
      parentRoute: typeof IndexLayoutManageLayoutImport
    }
    '/_indexLayout/_manageLayout/manage/list': {
      preLoaderRoute: typeof IndexLayoutManageLayoutManageListImport
      parentRoute: typeof IndexLayoutManageLayoutManageImport
    }
    '/_indexLayout/_manageLayout/manage/star': {
      preLoaderRoute: typeof IndexLayoutManageLayoutManageStarImport
      parentRoute: typeof IndexLayoutManageLayoutManageImport
    }
    '/_indexLayout/_manageLayout/manage/trash': {
      preLoaderRoute: typeof IndexLayoutManageLayoutManageTrashImport
      parentRoute: typeof IndexLayoutManageLayoutManageImport
    }
    '/question/$questionId/(Edit)/Edit': {
      preLoaderRoute: typeof QuestionQuestionIdEditEditImport
      parentRoute: typeof rootRoute
    }
    '/question/$questionId/(Stat)/Stat': {
      preLoaderRoute: typeof QuestionQuestionIdStatStatImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLayoutRoute.addChildren([
    IndexLayoutManageLayoutRoute.addChildren([
      IndexLayoutManageLayoutManageRoute.addChildren([
        IndexLayoutManageLayoutManageListRoute,
        IndexLayoutManageLayoutManageStarRoute,
        IndexLayoutManageLayoutManageTrashRoute,
      ]),
    ]),
    IndexLayoutSignRoute,
    IndexLayoutIndexRoute,
  ]),
  QuestionQuestionIdEditEditRoute,
  QuestionQuestionIdStatStatRoute,
])

/* prettier-ignore-end */
